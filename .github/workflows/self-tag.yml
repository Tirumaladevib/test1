name: Create new tags or update existing ones

on:
  push:
    branches:
      - main

jobs:
  # TODO: filter these to changed only to not run matrix for all actions & workflows

  get_all_actions_job:
    runs-on: ubuntu-latest
    outputs:
      any_changed: ${{ steps.get-changed-files.outputs.any_changed }}
      changed_files: ${{ steps.get-changed-files.outputs.changed_files }}
    steps:
      - uses: actions/checkout@v4

      # - name: Get changed files
      #   id: get-changed-files
      #   # yamllint disable-line rule:line-length
      #   uses: Tirumaladevib/test1/.github/actions/changed-files-since-last-success@main
      #   with:
      #     files_to_match: |
      #       .github/actions/**
      #       .github/workflows/**
      #     get_changed_dirs: true
      #     github_token: ${{ secrets.GH_TOKEN }}
      #     separator: "|"
      #     workflow_id: self-tag.yml
      
      - name: Get all actions and workflows to run
        id: get-all-actions
        shell: bash
        run: |

          # Get the list of changed files since the last commit (you can replace HEAD with another commit hash if needed)
          # Load the output of git diff into an array using mapfile
          CHANGED_FILES=".github/actions/**"

          # Initialize arrays to store files and directories
          files=()
          dirs=()

          # Loop through each changed file and separate files and directories
          for FILE in "${CHANGED_FILES[@]}"; do
              if [ -d "$FILE" ]; then
                  # If it's a directory, append to the dirs array
                  dirs+=("$FILE")
              else
                  # If it's a file, append to the files array
                  files+=("$FILE")
              fi
          done

          mapfile -t changed_dirs < <( printf '%s\n' "${dirs[@]}" "${files[@]}")
          echo "changed_dirs=$(jq -cne '{"paths": [$ARGS.positional[]]}' --args "${changed_dirs[@]}")"
